State : is an essential part in react because it allows components to be dynamic, interactive and capable of responding to user input or change over time 
#static
#dynamic #data
#hold the values for the components
1) useStateHook :
useState - allows you to add state to functional components
syntax: 
const[state, setState]= useState(initial value)
state - this is current state
setState - function to update the state
initial value - value you want to set as the initial 
Ex 1 :
App.js 
import React, {useState} from "react";
import './App.css'
const Counter=()=>{
  const[count, setCount]=useState(0);
  return(
    <div>
      <h1>{count}</h1>
    <button onClick={()=>setCount(count+1)}>Increment</button>
    <button onClick={()=>setCount(count-1)}>Decrement</button>
    </div>
  )
}
export default Counter;
App.css 


button {
  color: bisque;
  font-size: 20px;
  font-weight: bold;
  text-decoration: none;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;

}
Ex 2 :
import React, {useState} from 'react';
const ThemeToggler=()=>{
  const [theme, setTheme]=useState('light');
  const toggleTheme=()=>{
    setTheme(preyTheme=>(preyTheme==='light'?'dark':'light'))
  }
  return (
    <div style={{backgroundColor:theme=== "light"?"white":"black", color:theme==="light"?
      "black":"white", textAlign:"center"}}>
    <h1> The current theme is {theme}</h1>
    <button onClick={toggleTheme}>toggleTheme</button>
      </div>  
  )
};
export default ThemeToggler;
